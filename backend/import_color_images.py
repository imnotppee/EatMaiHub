import psycopg2
import json
import os

# ==============================
# CONFIG ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ PostgreSQL
# ==============================
DB_CONFIG = {
    "host": "10.117.10.236",  # üß© ‡πÉ‡∏ä‡πâ host ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ö pgAdmin
    "database": "Eat_Mai_Hub",
    "user": "postgres",
    "password": "1234",       # ‚Üê ‡πÉ‡∏™‡πà‡∏£‡∏´‡∏±‡∏™‡∏à‡∏£‡∏¥‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
    "port": 5432
}

# ==============================
# ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå JSON
# ==============================
JSON_PATH = os.path.join(os.path.dirname(__file__), "../frontend/data/color_menus.json")

with open(JSON_PATH, "r", encoding="utf-8") as f:
    color_data = json.load(f)

# ==============================
# ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
# ==============================
conn = psycopg2.connect(**DB_CONFIG)
cur = conn.cursor()

# ==============================
# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á (‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ)
# ==============================
cur.execute("""
CREATE TABLE IF NOT EXISTS colors (
    id SERIAL PRIMARY KEY,
    color_key VARCHAR(20) UNIQUE NOT NULL,
    color_name_th VARCHAR(20)
);
""")

cur.execute("""
CREATE TABLE IF NOT EXISTS colormenus (
    id SERIAL PRIMARY KEY,
    color_id INT REFERENCES colors(id),
    food_name VARCHAR(100),
    image_url VARCHAR(255)
);
""")
conn.commit()

# ==============================
# Insert ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
# ==============================
color_map = {
    "red": "‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå",
    "yellow": "‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå",
    "pink": "‡∏≠‡∏±‡∏á‡∏Ñ‡∏≤‡∏£",
    "green": "‡∏û‡∏∏‡∏ò",
    "orange": "‡∏û‡∏§‡∏´‡∏±‡∏™",
    "blue": "‡∏®‡∏∏‡∏Å‡∏£‡πå",
    "purple": "‡πÄ‡∏™‡∏≤‡∏£‡πå"
}

for color_key, foods in color_data.items():
    color_name_th = color_map.get(color_key, "")
    # --- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏µ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ ---
    cur.execute("""
        INSERT INTO colors (color_key, color_name_th)
        VALUES (%s, %s)
        ON CONFLICT (color_key) DO NOTHING;
    """, (color_key, color_name_th))

    # ‡∏î‡∏∂‡∏á id ‡∏Ç‡∏≠‡∏á‡∏™‡∏µ‡∏ô‡∏±‡πâ‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤
    cur.execute("SELECT id FROM colors WHERE color_key = %s;", (color_key,))
    color_id = cur.fetchone()[0]

    # --- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏°‡∏ô‡∏π ---
    for food in foods:
        name = food["name"]
        image = food["image"].replace("images/", "")  # ‡∏•‡∏ö path prefix
        cur.execute("""
            INSERT INTO colormenus (color_id, food_name, image_url)
            VALUES (%s, %s, %s)
            ON CONFLICT DO NOTHING;
        """, (color_id, name, image))

conn.commit()
cur.close()
conn.close()

print("‚úÖ ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• color menus ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß!")
